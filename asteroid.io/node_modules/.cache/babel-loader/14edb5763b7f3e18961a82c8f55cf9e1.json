{"ast":null,"code":"import { Buffer } from \"buffer\";\nimport * as Colyseus from \"colyseus.js\";\nglobal.Buffer = Buffer;\nlet canvas;\nlet context;\nlet canvasWidth = window.innerWidth;\nlet canvasHeight = window.innerHeight;\nlet ship;\nlet keys = [];\nvar client = new Colyseus.Client('ws://localhost:2567');\ndocument.addEventListener('DOMContentLoaded', SetupCanvas);\n\nfunction SetupCanvas() {\n  canvas = document.getElementById(\"asteroid-canvas\");\n  context = canvas.getContext(\"2d\");\n  canvas.width = canvasWidth;\n  canvas.height = canvasHeight;\n  context.fillStyle = \"black\";\n  context.fillRect(0, 0, canvas.width, canvas.height);\n  ship = new Ship();\n  document.body.addEventListener(\"keydown\", KeyDown);\n  document.body.addEventListener(\"keyup\", KeyUp);\n  client.joinOrCreate(\"my_room\").then(room => {\n    console.log(room.sessionId, \"joined\", room.name);\n    room.send({\n      move: \"left\"\n    });\n    room.onMessage(message => {\n      console.log(\"message received from server\");\n      console.log(message);\n    });\n  }).catch(e => {\n    console.log(\"JOIN ERROR\", e);\n  });\n  Render();\n}\n\nfunction KeyDown(e) {\n  keys[e.keyCode] = true;\n}\n\nfunction KeyUp(e) {\n  keys[e.keyCode] = false;\n}\n\nclass Ship {\n  constructor() {\n    this.visible = true;\n    this.x = canvasWidth / 2;\n    this.y = canvasHeight / 2;\n    this.movingForward = false;\n    this.speed = 0.1;\n    this.velX = 0;\n    this.velY = 0;\n    this.rotateSpeed = 0.001;\n    this.radius = 15;\n    this.angle = 0;\n    this.strokeColor = 'white';\n  }\n\n  Rotate(dir) {\n    this.angle += this.rotateSpeed * dir;\n  }\n\n  Update() {\n    let radians = this.angle / Math.PI * 180;\n\n    if (this.movingForward) {\n      this.velX += Math.cos(radians) * this.speed;\n      this.velY += Math.sin(radians) * this.speed;\n    } //if (this.x < this.radius) { } //When the ship goes to the left of the canvas\n    //if (this.x > canvas.width) { } //When the ship goes to the right of the canvas\n    //if (this.y < this.radius) { } //When the ship goes to the bottom of the canvas\n    //if (this.y > canvas.height) { } //When the ship goes to the top of the canvas\n\n\n    this.velX *= 0.99;\n    this.velY *= 0.99;\n    this.x -= this.velX;\n    this.y -= this.velY;\n  }\n\n  Draw() {\n    context.strokeStyle = this.strokeColor;\n    context.beginPath();\n    let vertAngle = Math.PI * 2 / 3;\n    let radians = this.angle / Math.PI * 180;\n\n    for (let i = 0; i < 3; i++) {\n      context.lineTo(this.x - this.radius * Math.cos(vertAngle * i + radians), this.y - this.radius * Math.sin(vertAngle * i + radians)); //context.drawImage(\"../assets/ship.png\", 10, 10); // Draw ship asset over stroked ship\n    }\n\n    context.closePath();\n    context.stroke();\n  }\n\n}\n\nfunction Render() {\n  ship.movingForward = keys[87];\n\n  if (keys[68]) {\n    ship.Rotate(1);\n  } //rotate to right if 'D' is pressed\n\n\n  if (keys[65]) {\n    ship.Rotate(-1);\n  } //rotate to right if 'A' is pressed\n\n\n  context.clearRect(0, 0, canvasWidth, canvasHeight);\n\n  if (ship.visible) {\n    ship.Update();\n    ship.Draw();\n  }\n\n  requestAnimationFrame(Render);\n}","map":{"version":3,"sources":["C:/Courses/PROG20261/asteroid.io/src/App.js"],"names":["Buffer","Colyseus","global","canvas","context","canvasWidth","window","innerWidth","canvasHeight","innerHeight","ship","keys","client","Client","document","addEventListener","SetupCanvas","getElementById","getContext","width","height","fillStyle","fillRect","Ship","body","KeyDown","KeyUp","joinOrCreate","then","room","console","log","sessionId","name","send","move","onMessage","message","catch","e","Render","keyCode","constructor","visible","x","y","movingForward","speed","velX","velY","rotateSpeed","radius","angle","strokeColor","Rotate","dir","Update","radians","Math","PI","cos","sin","Draw","strokeStyle","beginPath","vertAngle","i","lineTo","closePath","stroke","clearRect","requestAnimationFrame"],"mappings":"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","sourcesContent":["import { Buffer } from \"buffer\";\r\nimport * as Colyseus from \"colyseus.js\";\r\nglobal.Buffer = Buffer;\r\n\r\nlet canvas;\r\nlet context;\r\nlet canvasWidth = window.innerWidth;\r\nlet canvasHeight = window.innerHeight;\r\nlet ship;\r\nlet keys = [];\r\nvar client = new Colyseus.Client('ws://localhost:2567');\r\n\r\ndocument.addEventListener('DOMContentLoaded', SetupCanvas);\r\n\r\nfunction SetupCanvas(){\r\n    canvas = document.getElementById(\"asteroid-canvas\");\r\n    context = canvas.getContext(\"2d\");\r\n    canvas.width = canvasWidth;\r\n    canvas.height = canvasHeight;\r\n    context.fillStyle = \"black\";\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n    ship = new Ship();\r\n\r\n    document.body.addEventListener(\"keydown\", KeyDown);\r\n    document.body.addEventListener(\"keyup\", KeyUp);\r\n\t\r\n\t\r\n\tclient.joinOrCreate(\"my_room\").then(room => {\r\n\t\t\r\n\t\t\r\n\t\t\r\n    console.log(room.sessionId, \"joined\", room.name);\r\n\troom.send({ move: \"left\" });\r\n\t\r\n\troom.onMessage((message) => {\r\n  console.log(\"message received from server\");\r\n  console.log(message);\r\n});\r\n\t\r\n\t\r\n}).catch(e => {\r\n    console.log(\"JOIN ERROR\", e);\r\n\t\r\n\t\r\n\t\r\n\t\r\n});\r\n\r\n\r\n    Render();\r\n\t\r\n\r\n\r\n}\r\n\r\nfunction KeyDown(e){ keys[e.keyCode] = true; }\r\nfunction KeyUp(e){ keys[e.keyCode] = false; }\r\n\r\nclass Ship {\r\n    constructor() {\r\n        this.visible = true;\r\n        this.x = canvasWidth / 2;\r\n        this.y = canvasHeight / 2;\r\n        this.movingForward = false;\r\n        this.speed = 0.1;\r\n        this.velX = 0;\r\n        this.velY = 0;\r\n        this.rotateSpeed = 0.001;\r\n        this.radius = 15;\r\n        this.angle = 0;\r\n        this.strokeColor = 'white';\r\n    }\r\n\r\n\r\n    Rotate(dir) {\r\n        this.angle += this.rotateSpeed * dir;\r\n    }\r\n\r\n\r\n    Update() {\r\n        let radians = this.angle / Math.PI * 180;\r\n\r\n        if (this.movingForward) {\r\n            this.velX += Math.cos(radians) * this.speed;\r\n            this.velY += Math.sin(radians) * this.speed;\r\n        }\r\n        //if (this.x < this.radius) { } //When the ship goes to the left of the canvas\r\n        //if (this.x > canvas.width) { } //When the ship goes to the right of the canvas\r\n        //if (this.y < this.radius) { } //When the ship goes to the bottom of the canvas\r\n        //if (this.y > canvas.height) { } //When the ship goes to the top of the canvas\r\n\r\n        this.velX *= 0.99;\r\n        this.velY *= 0.99;\r\n\r\n        this.x -= this.velX;\r\n        this.y -= this.velY;\r\n    }\r\n\r\n    Draw() {\r\n        context.strokeStyle = this.strokeColor;\r\n        context.beginPath();\r\n        let vertAngle = ((Math.PI * 2) / 3);\r\n\r\n        let radians = this.angle / Math.PI * 180;\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            context.lineTo(this.x - this.radius * Math.cos(vertAngle * i + radians), this.y - this.radius * Math.sin(vertAngle * i + radians));\r\n            //context.drawImage(\"../assets/ship.png\", 10, 10); // Draw ship asset over stroked ship\r\n        }\r\n        context.closePath();\r\n        context.stroke();\r\n    }\r\n}\r\n\r\nfunction Render() {\r\n\t\r\n    ship.movingForward = (keys[87]);\r\n\r\n    if (keys[68]) { ship.Rotate(1); } //rotate to right if 'D' is pressed\r\n    if (keys[65]) { ship.Rotate(-1); } //rotate to right if 'A' is pressed\r\n\r\n    context.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n    if(ship.visible){\r\n        ship.Update();\r\n        ship.Draw();\r\n    }\r\n\r\n    requestAnimationFrame(Render);\r\n}"]},"metadata":{},"sourceType":"module"}