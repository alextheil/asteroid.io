{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) 2014 Ion Drive Software Ltd.\n * https://github.com/darrachequesne/notepack/\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction utf8Write(view, offset, str) {\n  var c = 0;\n\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n\n    if (c < 0x80) {\n      view.setUint8(offset++, c);\n    } else if (c < 0x800) {\n      view.setUint8(offset++, 0xc0 | c >> 6);\n      view.setUint8(offset++, 0x80 | c & 0x3f);\n    } else if (c < 0xd800 || c >= 0xe000) {\n      view.setUint8(offset++, 0xe0 | c >> 12);\n      view.setUint8(offset++, 0x80 | c >> 6 & 0x3f);\n      view.setUint8(offset++, 0x80 | c & 0x3f);\n    } else {\n      i++;\n      c = 0x10000 + ((c & 0x3ff) << 10 | str.charCodeAt(i) & 0x3ff);\n      view.setUint8(offset++, 0xf0 | c >> 18);\n      view.setUint8(offset++, 0x80 | c >> 12 & 0x3f);\n      view.setUint8(offset++, 0x80 | c >> 6 & 0x3f);\n      view.setUint8(offset++, 0x80 | c & 0x3f);\n    }\n  }\n}\n\nfunction utf8Length(str) {\n  var c = 0,\n      length = 0;\n\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n\n    if (c < 0x80) {\n      length += 1;\n    } else if (c < 0x800) {\n      length += 2;\n    } else if (c < 0xd800 || c >= 0xe000) {\n      length += 3;\n    } else {\n      i++;\n      length += 4;\n    }\n  }\n\n  return length;\n}\n\nfunction _encode(bytes, defers, value) {\n  var type = typeof value,\n      i = 0,\n      l = 0,\n      hi = 0,\n      lo = 0,\n      length = 0,\n      size = 0;\n\n  if (type === 'string') {\n    length = utf8Length(value); // fixstr\n\n    if (length < 0x20) {\n      bytes.push(length | 0xa0);\n      size = 1;\n    } // str 8\n    else if (length < 0x100) {\n        bytes.push(0xd9, length);\n        size = 2;\n      } // str 16\n      else if (length < 0x10000) {\n          bytes.push(0xda, length >> 8, length);\n          size = 3;\n        } // str 32\n        else if (length < 0x100000000) {\n            bytes.push(0xdb, length >> 24, length >> 16, length >> 8, length);\n            size = 5;\n          } else {\n            throw new Error('String too long');\n          }\n\n    defers.push({\n      _str: value,\n      _length: length,\n      _offset: bytes.length\n    });\n    return size + length;\n  }\n\n  if (type === 'number') {\n    // TODO: encode to float 32?\n    // float 64\n    if (Math.floor(value) !== value || !isFinite(value)) {\n      bytes.push(0xcb);\n      defers.push({\n        _float: value,\n        _length: 8,\n        _offset: bytes.length\n      });\n      return 9;\n    }\n\n    if (value >= 0) {\n      // positive fixnum\n      if (value < 0x80) {\n        bytes.push(value);\n        return 1;\n      } // uint 8\n\n\n      if (value < 0x100) {\n        bytes.push(0xcc, value);\n        return 2;\n      } // uint 16\n\n\n      if (value < 0x10000) {\n        bytes.push(0xcd, value >> 8, value);\n        return 3;\n      } // uint 32\n\n\n      if (value < 0x100000000) {\n        bytes.push(0xce, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      } // uint 64\n\n\n      hi = value / Math.pow(2, 32) >> 0;\n      lo = value >>> 0;\n      bytes.push(0xcf, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    } else {\n      // negative fixnum\n      if (value >= -0x20) {\n        bytes.push(value);\n        return 1;\n      } // int 8\n\n\n      if (value >= -0x80) {\n        bytes.push(0xd0, value);\n        return 2;\n      } // int 16\n\n\n      if (value >= -0x8000) {\n        bytes.push(0xd1, value >> 8, value);\n        return 3;\n      } // int 32\n\n\n      if (value >= -0x80000000) {\n        bytes.push(0xd2, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      } // int 64\n\n\n      hi = Math.floor(value / Math.pow(2, 32));\n      lo = value >>> 0;\n      bytes.push(0xd3, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    }\n  }\n\n  if (type === 'object') {\n    // nil\n    if (value === null) {\n      bytes.push(0xc0);\n      return 1;\n    }\n\n    if (Array.isArray(value)) {\n      length = value.length; // fixarray\n\n      if (length < 0x10) {\n        bytes.push(length | 0x90);\n        size = 1;\n      } // array 16\n      else if (length < 0x10000) {\n          bytes.push(0xdc, length >> 8, length);\n          size = 3;\n        } // array 32\n        else if (length < 0x100000000) {\n            bytes.push(0xdd, length >> 24, length >> 16, length >> 8, length);\n            size = 5;\n          } else {\n            throw new Error('Array too large');\n          }\n\n      for (i = 0; i < length; i++) {\n        size += _encode(bytes, defers, value[i]);\n      }\n\n      return size;\n    } // fixext 8 / Date\n\n\n    if (value instanceof Date) {\n      var time = value.getTime();\n      hi = Math.floor(time / Math.pow(2, 32));\n      lo = time >>> 0;\n      bytes.push(0xd7, 0, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 10;\n    }\n\n    if (value instanceof ArrayBuffer) {\n      length = value.byteLength; // bin 8\n\n      if (length < 0x100) {\n        bytes.push(0xc4, length);\n        size = 2;\n      } else // bin 16\n        if (length < 0x10000) {\n          bytes.push(0xc5, length >> 8, length);\n          size = 3;\n        } else // bin 32\n          if (length < 0x100000000) {\n            bytes.push(0xc6, length >> 24, length >> 16, length >> 8, length);\n            size = 5;\n          } else {\n            throw new Error('Buffer too large');\n          }\n\n      defers.push({\n        _bin: value,\n        _length: length,\n        _offset: bytes.length\n      });\n      return size + length;\n    }\n\n    if (typeof value.toJSON === 'function') {\n      return _encode(bytes, defers, value.toJSON());\n    }\n\n    var keys = [],\n        key = '';\n    var allKeys = Object.keys(value);\n\n    for (i = 0, l = allKeys.length; i < l; i++) {\n      key = allKeys[i];\n\n      if (typeof value[key] !== 'function') {\n        keys.push(key);\n      }\n    }\n\n    length = keys.length; // fixmap\n\n    if (length < 0x10) {\n      bytes.push(length | 0x80);\n      size = 1;\n    } // map 16\n    else if (length < 0x10000) {\n        bytes.push(0xde, length >> 8, length);\n        size = 3;\n      } // map 32\n      else if (length < 0x100000000) {\n          bytes.push(0xdf, length >> 24, length >> 16, length >> 8, length);\n          size = 5;\n        } else {\n          throw new Error('Object too large');\n        }\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n      size += _encode(bytes, defers, key);\n      size += _encode(bytes, defers, value[key]);\n    }\n\n    return size;\n  } // false/true\n\n\n  if (type === 'boolean') {\n    bytes.push(value ? 0xc3 : 0xc2);\n    return 1;\n  } // fixext 1 / undefined\n\n\n  if (type === 'undefined') {\n    bytes.push(0xd4, 0, 0);\n    return 3;\n  }\n\n  throw new Error('Could not encode');\n}\n\nfunction encode(value) {\n  var bytes = [];\n  var defers = [];\n\n  var size = _encode(bytes, defers, value);\n\n  var buf = new ArrayBuffer(size);\n  var view = new DataView(buf);\n  var deferIndex = 0;\n  var deferWritten = 0;\n  var nextOffset = -1;\n\n  if (defers.length > 0) {\n    nextOffset = defers[0]._offset;\n  }\n\n  var defer,\n      deferLength = 0,\n      offset = 0;\n\n  for (var i = 0, l = bytes.length; i < l; i++) {\n    view.setUint8(deferWritten + i, bytes[i]);\n\n    if (i + 1 !== nextOffset) {\n      continue;\n    }\n\n    defer = defers[deferIndex];\n    deferLength = defer._length;\n    offset = deferWritten + nextOffset;\n\n    if (defer._bin) {\n      var bin = new Uint8Array(defer._bin);\n\n      for (var j = 0; j < deferLength; j++) {\n        view.setUint8(offset + j, bin[j]);\n      }\n    } else if (defer._str) {\n      utf8Write(view, offset, defer._str);\n    } else if (defer._float !== undefined) {\n      view.setFloat64(offset, defer._float);\n    }\n\n    deferIndex++;\n    deferWritten += deferLength;\n\n    if (defers[deferIndex]) {\n      nextOffset = defers[deferIndex]._offset;\n    }\n  }\n\n  return buf;\n}\n\nexports.default = encode;","map":{"version":3,"sources":["C:/Courses/PROG20261/asteroid.io/node_modules/colyseus.js/lib/msgpack/encode.js"],"names":["Object","defineProperty","exports","value","utf8Write","view","offset","str","c","i","l","length","charCodeAt","setUint8","utf8Length","_encode","bytes","defers","type","hi","lo","size","push","Error","_str","_length","_offset","Math","floor","isFinite","_float","pow","Array","isArray","Date","time","getTime","ArrayBuffer","byteLength","_bin","toJSON","keys","key","allKeys","encode","buf","DataView","deferIndex","deferWritten","nextOffset","defer","deferLength","bin","Uint8Array","j","undefined","setFloat64","default"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright (c) 2014 Ion Drive Software Ltd.\n * https://github.com/darrachequesne/notepack/\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction utf8Write(view, offset, str) {\n    var c = 0;\n    for (var i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            view.setUint8(offset++, c);\n        }\n        else if (c < 0x800) {\n            view.setUint8(offset++, 0xc0 | (c >> 6));\n            view.setUint8(offset++, 0x80 | (c & 0x3f));\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            view.setUint8(offset++, 0xe0 | (c >> 12));\n            view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n            view.setUint8(offset++, 0x80 | (c & 0x3f));\n        }\n        else {\n            i++;\n            c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n            view.setUint8(offset++, 0xf0 | (c >> 18));\n            view.setUint8(offset++, 0x80 | (c >> 12) & 0x3f);\n            view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n            view.setUint8(offset++, 0x80 | (c & 0x3f));\n        }\n    }\n}\nfunction utf8Length(str) {\n    var c = 0, length = 0;\n    for (var i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\nfunction _encode(bytes, defers, value) {\n    var type = typeof value, i = 0, l = 0, hi = 0, lo = 0, length = 0, size = 0;\n    if (type === 'string') {\n        length = utf8Length(value);\n        // fixstr\n        if (length < 0x20) {\n            bytes.push(length | 0xa0);\n            size = 1;\n        }\n        // str 8\n        else if (length < 0x100) {\n            bytes.push(0xd9, length);\n            size = 2;\n        }\n        // str 16\n        else if (length < 0x10000) {\n            bytes.push(0xda, length >> 8, length);\n            size = 3;\n        }\n        // str 32\n        else if (length < 0x100000000) {\n            bytes.push(0xdb, length >> 24, length >> 16, length >> 8, length);\n            size = 5;\n        }\n        else {\n            throw new Error('String too long');\n        }\n        defers.push({ _str: value, _length: length, _offset: bytes.length });\n        return size + length;\n    }\n    if (type === 'number') {\n        // TODO: encode to float 32?\n        // float 64\n        if (Math.floor(value) !== value || !isFinite(value)) {\n            bytes.push(0xcb);\n            defers.push({ _float: value, _length: 8, _offset: bytes.length });\n            return 9;\n        }\n        if (value >= 0) {\n            // positive fixnum\n            if (value < 0x80) {\n                bytes.push(value);\n                return 1;\n            }\n            // uint 8\n            if (value < 0x100) {\n                bytes.push(0xcc, value);\n                return 2;\n            }\n            // uint 16\n            if (value < 0x10000) {\n                bytes.push(0xcd, value >> 8, value);\n                return 3;\n            }\n            // uint 32\n            if (value < 0x100000000) {\n                bytes.push(0xce, value >> 24, value >> 16, value >> 8, value);\n                return 5;\n            }\n            // uint 64\n            hi = (value / Math.pow(2, 32)) >> 0;\n            lo = value >>> 0;\n            bytes.push(0xcf, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n            return 9;\n        }\n        else {\n            // negative fixnum\n            if (value >= -0x20) {\n                bytes.push(value);\n                return 1;\n            }\n            // int 8\n            if (value >= -0x80) {\n                bytes.push(0xd0, value);\n                return 2;\n            }\n            // int 16\n            if (value >= -0x8000) {\n                bytes.push(0xd1, value >> 8, value);\n                return 3;\n            }\n            // int 32\n            if (value >= -0x80000000) {\n                bytes.push(0xd2, value >> 24, value >> 16, value >> 8, value);\n                return 5;\n            }\n            // int 64\n            hi = Math.floor(value / Math.pow(2, 32));\n            lo = value >>> 0;\n            bytes.push(0xd3, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n            return 9;\n        }\n    }\n    if (type === 'object') {\n        // nil\n        if (value === null) {\n            bytes.push(0xc0);\n            return 1;\n        }\n        if (Array.isArray(value)) {\n            length = value.length;\n            // fixarray\n            if (length < 0x10) {\n                bytes.push(length | 0x90);\n                size = 1;\n            }\n            // array 16\n            else if (length < 0x10000) {\n                bytes.push(0xdc, length >> 8, length);\n                size = 3;\n            }\n            // array 32\n            else if (length < 0x100000000) {\n                bytes.push(0xdd, length >> 24, length >> 16, length >> 8, length);\n                size = 5;\n            }\n            else {\n                throw new Error('Array too large');\n            }\n            for (i = 0; i < length; i++) {\n                size += _encode(bytes, defers, value[i]);\n            }\n            return size;\n        }\n        // fixext 8 / Date\n        if (value instanceof Date) {\n            var time = value.getTime();\n            hi = Math.floor(time / Math.pow(2, 32));\n            lo = time >>> 0;\n            bytes.push(0xd7, 0, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n            return 10;\n        }\n        if (value instanceof ArrayBuffer) {\n            length = value.byteLength;\n            // bin 8\n            if (length < 0x100) {\n                bytes.push(0xc4, length);\n                size = 2;\n            }\n            else \n            // bin 16\n            if (length < 0x10000) {\n                bytes.push(0xc5, length >> 8, length);\n                size = 3;\n            }\n            else \n            // bin 32\n            if (length < 0x100000000) {\n                bytes.push(0xc6, length >> 24, length >> 16, length >> 8, length);\n                size = 5;\n            }\n            else {\n                throw new Error('Buffer too large');\n            }\n            defers.push({ _bin: value, _length: length, _offset: bytes.length });\n            return size + length;\n        }\n        if (typeof value.toJSON === 'function') {\n            return _encode(bytes, defers, value.toJSON());\n        }\n        var keys = [], key = '';\n        var allKeys = Object.keys(value);\n        for (i = 0, l = allKeys.length; i < l; i++) {\n            key = allKeys[i];\n            if (typeof value[key] !== 'function') {\n                keys.push(key);\n            }\n        }\n        length = keys.length;\n        // fixmap\n        if (length < 0x10) {\n            bytes.push(length | 0x80);\n            size = 1;\n        }\n        // map 16\n        else if (length < 0x10000) {\n            bytes.push(0xde, length >> 8, length);\n            size = 3;\n        }\n        // map 32\n        else if (length < 0x100000000) {\n            bytes.push(0xdf, length >> 24, length >> 16, length >> 8, length);\n            size = 5;\n        }\n        else {\n            throw new Error('Object too large');\n        }\n        for (i = 0; i < length; i++) {\n            key = keys[i];\n            size += _encode(bytes, defers, key);\n            size += _encode(bytes, defers, value[key]);\n        }\n        return size;\n    }\n    // false/true\n    if (type === 'boolean') {\n        bytes.push(value ? 0xc3 : 0xc2);\n        return 1;\n    }\n    // fixext 1 / undefined\n    if (type === 'undefined') {\n        bytes.push(0xd4, 0, 0);\n        return 3;\n    }\n    throw new Error('Could not encode');\n}\nfunction encode(value) {\n    var bytes = [];\n    var defers = [];\n    var size = _encode(bytes, defers, value);\n    var buf = new ArrayBuffer(size);\n    var view = new DataView(buf);\n    var deferIndex = 0;\n    var deferWritten = 0;\n    var nextOffset = -1;\n    if (defers.length > 0) {\n        nextOffset = defers[0]._offset;\n    }\n    var defer, deferLength = 0, offset = 0;\n    for (var i = 0, l = bytes.length; i < l; i++) {\n        view.setUint8(deferWritten + i, bytes[i]);\n        if (i + 1 !== nextOffset) {\n            continue;\n        }\n        defer = defers[deferIndex];\n        deferLength = defer._length;\n        offset = deferWritten + nextOffset;\n        if (defer._bin) {\n            var bin = new Uint8Array(defer._bin);\n            for (var j = 0; j < deferLength; j++) {\n                view.setUint8(offset + j, bin[j]);\n            }\n        }\n        else if (defer._str) {\n            utf8Write(view, offset, defer._str);\n        }\n        else if (defer._float !== undefined) {\n            view.setFloat64(offset, defer._float);\n        }\n        deferIndex++;\n        deferWritten += deferLength;\n        if (defers[deferIndex]) {\n            nextOffset = defers[deferIndex]._offset;\n        }\n    }\n    return buf;\n}\nexports.default = encode;\n"]},"metadata":{},"sourceType":"script"}